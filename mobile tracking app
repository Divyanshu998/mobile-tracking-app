<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Phone Tracker</title>
    
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 0;
        }

        h1 {
            color: #333;
        }

        form {
            margin: 20px 0;
        }

        #map {
            height: 500px;
            width: 100%;
        }
    </style>
</head>
<body>

    <h1>Phone Tracker</h1>
    <p>Enter phone number to track the phone's location.</p>

    <form id="track-form">
        <input type="text" id="phone-number" placeholder="Enter phone number" required>
        <button type="submit">Track</button>
    </form>

    <div id="map"></div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>
        // Initialize the map
        var map = L.map('map').setView([51.505, -0.09], 13);

        // Set up the OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Marker for the phone location
        var phoneMarker;

        // Function to update the map with the user's real-time location
        function updateLocation(position) {
            var latitude = position.coords.latitude;
            var longitude = position.coords.longitude;

            // Update the map with the new location
            var newLocation = [latitude, longitude];

            // Remove old marker if it exists
            if (phoneMarker) {
                map.removeLayer(phoneMarker);
            }

            // Add new marker at the real-time location
            phoneMarker = L.marker(newLocation).addTo(map)
                .bindPopup('Phone is here').openPopup();

            // Pan the map to the new location
            map.setView(newLocation, 13);
        }

        // Error handling if geolocation fails
        function showError(error) {
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        }

        // Event listener for form submission
        document.getElementById('track-form').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent form from reloading the page

            var phoneNumber = document.getElementById('phone-number').value;

            if (phoneNumber) {
                // Check if Geolocation is available
                if (navigator.geolocation) {
                    // Get the current position and update the map with the location
                    navigator.geolocation.getCurrentPosition(updateLocation, showError);
                } else {
                    alert("Geolocation is not supported by this browser.");
                }
            }
        });
    </script>

</body>
</html>
